import * as github from "@actions/github";
import child_process from "child_process";

describe("checks", () => {
    it("PR checks outcome should be the expected ones", async () => {
        const octokit = github.getOctokit(process.env.GITHUB_TOKEN!);
        const commit = process.env.COMMIT_SHA || child_process.execSync("git rev-parse HEAD").toString().trim();

        // noinspection CommaExpressionJS
        const checks = (await octokit.rest.checks.listForRef({ ...github.context.repo, ref: commit })).data.check_runs
            .filter((check) => check.name.startsWith("Test Reports"))
            .sort((a, b) => a.name.localeCompare(b.name))
            .reduce(
                (acc, check) => (
                    (acc[check.name] = {
                        status: check.status,
                        conclusion: check.conclusion,
                        title: check.output.title,
                        summary: check.output.summary?.replace(/(⌛ )[\d.]+|[\d.]+(\n)/g, "$1<time>$2"),
                        annotations: check.output.annotations_count,
                    }),
                    acc
                ),
                {} as { [key: string]: object },
            );

        expect(checks).toStrictEqual({
            "Test Reports (Failures)": {
                annotations: 161,
                conclusion: "failure",
                status: "completed",
                summary:
                    '|Test Suites|✅ 41 passed|🟡 3 skipped|❌ 11 failed|⌛ took\n|:-|-|-|-|-\n|<details><summary>❌ org.test.Test<sup id="t1"><a href="#t1">#</a></sup></summary><ul><li>✅ andAfterReset<sup id="t2"><a href="#t2">#</a></sup> (⌛ <time>)</li><li>✅ isDeterministic<sup id="t3"><a href="#t3">#</a></sup> (⌛ <time>)</li><li>❌ testScene[CLEAR at 2024-08-01T00:00+02:00[Europe/Madrid]]<sup id="t4"><a href="#t4">#</a></sup> (⌛ <time>)</li></ul></details>|2|0|1|<time>\n|<details><summary>❌❗<sup id="t5"><a href="#t5">#</a></sup> [^flakyDisclaimer]</summary><ul><li>❌ flakyTest<sup id="t6"><a href="#t6">#</a></sup> (⌛ <time>)</li><li>❎❗[^flakyDisclaimer]i_can_see_map_screen_for_delivering_orders<sup id="t7"><a href="#t7">#</a></sup> (⌛ <time>)</li><li>✅ userCanApplyGroupFilters<sup id="t8"><a href="#t8">#</a></sup> (⌛ <time>)</li><li>✅ userCanOpenAndApplyFilters<sup id="t9"><a href="#t9">#</a></sup> (⌛ <time>)</li></ul></details>|3|0|1|<time>\n|<details><summary>✅ asArray<sup id="t10"><a href="#t10">#</a></sup></summary><ul><li>✅ asArray when multiple elements, returns the same<sup id="t11"><a href="#t11">#</a></sup> (⌛ <time>)</li><li>✅ asArray when not a value, returns an empty array<sup id="t12"><a href="#t12">#</a></sup> (⌛ <time>)</li><li>✅ asArray when single element, returns it as an array<sup id="t13"><a href="#t13">#</a></sup> (⌛ <time>)</li></ul></details>|3|0|0|<time>\n|<details><summary>✅ main<sup id="t14"><a href="#t14">#</a></sup></summary><ul><li>✅ main delegates to parsers and reports results<sup id="t15"><a href="#t15">#</a></sup> (⌛ <time>)</li><li>✅ main if error and should fail, expect to fail<sup id="t16"><a href="#t16">#</a></sup> (⌛ <time>)</li><li>✅ main if warnings and should fail, expect to fail<sup id="t17"><a href="#t17">#</a></sup> (⌛ <time>)</li></ul></details>|3|0|0|<time>\n|<details><summary>✅ readFile<sup id="t18"><a href="#t18">#</a></sup></summary><ul><li>✅ readFile should return parsed XML file as JSON<sup id="t19"><a href="#t19">#</a></sup> (⌛ <time>)</li></ul></details>|1|0|0|<time>\n|<details><summary>✅ processFile<sup id="t20"><a href="#t20">#</a></sup></summary><ul><li>✅ processFile delegates to parsers and reports results<sup id="t21"><a href="#t21">#</a></sup> (⌛ <time>)</li></ul></details>|1|0|0|<time>\n|<details><summary>❌ junitParser<sup id="t22"><a href="#t22">#</a></sup></summary><ul><li>❌ junitParser given a jest junit xml should obtain annotations<sup id="t23"><a href="#t23">#</a></sup> (⌛ <time>)</li><li>✅ junitParser given another junit xml should obtain annotations<sup id="t24"><a href="#t24">#</a></sup> (⌛ <time>)</li><li>✅ junitParser given junit xml should obtain annotations<sup id="t25"><a href="#t25">#</a></sup> (⌛ <time>)</li></ul></details>|2|0|1|<time>\n|<details><summary>✅ androidLintParser<sup id="t26"><a href="#t26">#</a></sup></summary><ul><li>✅ androidLintParser given lint xml should obtain annotations<sup id="t27"><a href="#t27">#</a></sup> (⌛ <time>)</li></ul></details>|1|0|0|<time>\n|<details><summary>✅ checkstyleParser<sup id="t28"><a href="#t28">#</a></sup></summary><ul><li>✅ checkstyleParser given detekt xml should obtain annotations<sup id="t29"><a href="#t29">#</a></sup> (⌛ <time>)</li></ul></details>|1|0|0|<time>\n|<details><summary>✅ resolveFile<sup id="t30"><a href="#t30">#</a></sup></summary><ul><li>✅ resolveFile when file exists, just returns itself<sup id="t31"><a href="#t31">#</a></sup> (⌛ <time>)</li><li>✅ resolveFile when is absolute path, just returns itself<sup id="t32"><a href="#t32">#</a></sup> (⌛ <time>)</li><li>✅ resolveFile when looking for a file but extension does not matches, it returns the same<sup id="t33"><a href="#t33">#</a></sup> (⌛ <time>)</li><li>✅ resolveFile when looking for a file with possible extensions, it returns a match<sup id="t34"><a href="#t34">#</a></sup> (⌛ <time>)</li><li>✅ resolveFile when looking for a file, it returns a match<sup id="t35"><a href="#t35">#</a></sup> (⌛ <time>)</li></ul></details>|5|0|0|<time>\n|<details><summary>✅ org.test.sample.AnotherTestSuite<sup id="t36"><a href="#t36">#</a></sup></summary><ul><li>✅ aTest[maxDuration=100]<sup id="t37"><a href="#t37">#</a></sup> (⌛ <time>)</li><li>✅ aTest[maxDuration=200]<sup id="t38"><a href="#t38">#</a></sup> (⌛ <time>)</li><li>✅ aTest[maxDuration=300]<sup id="t39"><a href="#t39">#</a></sup> (⌛ <time>)</li><li>✅ aTest[maxDuration=400]<sup id="t40"><a href="#t40">#</a></sup> (⌛ <time>)</li></ul></details>|4|0|0|<time>\n|<details><summary>❌ org.test.sample.FlakyTestSuite<sup id="t41"><a href="#t41">#</a></sup></summary><ul><li>❌ flakyTest()<sup id="t42"><a href="#t42">#</a></sup> (⌛ <time>)</li><li>❌ flakyTest()<sup id="t43"><a href="#t43">#</a></sup> (⌛ <time>)</li><li>✅ flakyTest()<sup id="t44"><a href="#t44">#</a></sup> (⌛ <time>)</li></ul></details>|1|0|2|<time>\n|<details><summary>❌ org.test.sample.SampleTestSuite<sup id="t45"><a href="#t45">#</a></sup></summary><ul><li>🟡 a test skipped()<sup id="t46"><a href="#t46">#</a></sup> (⌛ <time>)</li><li>❌ a test that fails()<sup id="t47"><a href="#t47">#</a></sup> (⌛ <time>)</li><li>✅ a test that passes()<sup id="t48"><a href="#t48">#</a></sup> (⌛ <time>)</li><li>❌ a test that throws an exception()<sup id="t49"><a href="#t49">#</a></sup> (⌛ <time>)</li></ul></details>|1|1|2|<time>\n|<details><summary>✅ Tests.Registration<sup id="t50"><a href="#t50">#</a></sup></summary><ul><li>✅ testCase1<sup id="t51"><a href="#t51">#</a></sup> (⌛ <time>)</li><li>✅ testCase2<sup id="t52"><a href="#t52">#</a></sup> (⌛ <time>)</li><li>✅ testCase3<sup id="t53"><a href="#t53">#</a></sup> (⌛ <time>)</li></ul></details>|3|0|0|<time>\n|<details><summary>❌ Tests.Authentication<sup id="t54"><a href="#t54">#</a></sup></summary><ul><li>✅ testCase7<sup id="t55"><a href="#t55">#</a></sup> (⌛ <time>)</li><li>✅ testCase8<sup id="t56"><a href="#t56">#</a></sup> (⌛ <time>)</li><li>❌ testCase9<sup id="t57"><a href="#t57">#</a></sup> (⌛ <time>)</li></ul></details>|2|0|1|<time>\n|<details><summary>✅ Tests.Authentication.Login<sup id="t58"><a href="#t58">#</a></sup></summary><ul><li>✅ testCase4<sup id="t59"><a href="#t59">#</a></sup> (⌛ <time>)</li><li>✅ testCase5<sup id="t60"><a href="#t60">#</a></sup> (⌛ <time>)</li><li>✅ testCase6<sup id="t61"><a href="#t61">#</a></sup> (⌛ <time>)</li></ul></details>|3|0|0|<time>\n|<details><summary>✅ TrackingUIGoogleMapTests<sup id="t62"><a href="#t62">#</a></sup></summary><ul><li>✅ exampleUsage()<sup id="t63"><a href="#t63">#</a></sup></li></ul></details>|1|0|0|\n|<details><summary>✅ TrackingUITests<sup id="t64"><a href="#t64">#</a></sup></summary><ul><li>✅ example()<sup id="t65"><a href="#t65">#</a></sup></li></ul></details>|1|0|0|\n|<details><summary>❌❗SampleTests<sup id="t66"><a href="#t66">#</a></sup> [^flakyDisclaimer]</summary><ul><li>❌ testFailure()<sup id="t67"><a href="#t67">#</a></sup> (⌛ <time>,25s)</li><li>❎❗[^flakyDisclaimer]testFlaky()<sup id="t68"><a href="#t68">#</a></sup> (⌛ <time>,0012s)</li><li>🟡 testSkipped()<sup id="t69"><a href="#t69">#</a></sup> (⌛ <time>,006s)</li><li>✅ testSuccess()<sup id="t70"><a href="#t70">#</a></sup> (⌛ <time>,00041s)</li></ul></details>|2|1|1|\n|<details><summary>❌ SampleTests<sup id="t71"><a href="#t71">#</a></sup></summary><ul><li>❌ testFailure()<sup id="t72"><a href="#t72">#</a></sup> (⌛ <time>,36s)</li><li>❌ testFlaky()<sup id="t73"><a href="#t73">#</a></sup> (⌛ <time>,0012s)</li><li>🟡 testSkipped()<sup id="t74"><a href="#t74">#</a></sup> (⌛ <time>,005s)</li><li>✅ testSuccess()<sup id="t75"><a href="#t75">#</a></sup> (⌛ <time>,00072s)</li></ul></details>|1|1|2|\n[^flakyDisclaimer]: ❎❗flaky test (some executions have passed, others have failed)\n\n|CheckStyle<sup id="c1"><a href="#c1">#</a></sup>|🛑 60 errors|⚠️ 83 warnings|💡 0 others|\n|:-|-|-|-|\n|checkstyle.DummyError<sup id="c2"><a href="#c2">#</a></sup>|60|0|0|\n|checkstyle.DummyWarning<sup id="c3"><a href="#c3">#</a></sup>|0|83|0|\n\n|Detekt<sup id="c4"><a href="#c4">#</a></sup>|🛑 0 errors|⚠️ 1 warning|💡 0 others|\n|:-|-|-|-|\n|NewLineAtEndOfFile<sup id="c5"><a href="#c5">#</a></sup>|0|1|0|\n\n|lint 8.4.0<sup id="c6"><a href="#c6">#</a></sup>|🛑 0 errors|⚠️ 4 warnings|💡 0 others|\n|:-|-|-|-|\n|Correctness / GradleDependency<sup id="c7"><a href="#c7">#</a></sup>|0|1|0|\n|Performance / VectorPath<sup id="c8"><a href="#c8">#</a></sup>|0|3|0|\n\n\n\n> [!CAUTION]\n> There were some failures processing report files:\n> - `File \'samples/TEST-org.test.sample.FlakyFailingTestSuite.xml\' (47.18KB) exceeds the allowed maximum of 20KB`',
                title: "55 tests: ✅ 41 (❗2), 🟡 3, ❌ 11, checks: 🛑 60, ⚠️ 88, ‼️ 1",
            },
            "Test Reports (GitHub App)": {
                annotations: 23,
                conclusion: "failure",
                status: "completed",
                summary:
                    '|Test Suites|✅ 41 passed|🟡 3 skipped|❌ 16 failed|⌛ took\n|:-|-|-|-|-\n|<details><summary>❌ org.test.Test<sup id="t1"><a href="#t1">#</a></sup></summary><ul><li>✅ andAfterReset<sup id="t2"><a href="#t2">#</a></sup> (⌛ <time>)</li><li>✅ isDeterministic<sup id="t3"><a href="#t3">#</a></sup> (⌛ <time>)</li><li>❌ testScene[CLEAR at 2024-08-01T00:00+02:00[Europe/Madrid]]<sup id="t4"><a href="#t4">#</a></sup> (⌛ <time>)</li></ul></details>|2|0|1|<time>\n|<details><summary>❌❗<sup id="t5"><a href="#t5">#</a></sup> [^flakyDisclaimer]</summary><ul><li>❌ flakyTest<sup id="t6"><a href="#t6">#</a></sup> (⌛ <time>)</li><li>❎❗[^flakyDisclaimer]i_can_see_map_screen_for_delivering_orders<sup id="t7"><a href="#t7">#</a></sup> (⌛ <time>)</li><li>✅ userCanApplyGroupFilters<sup id="t8"><a href="#t8">#</a></sup> (⌛ <time>)</li><li>✅ userCanOpenAndApplyFilters<sup id="t9"><a href="#t9">#</a></sup> (⌛ <time>)</li></ul></details>|3|0|1|<time>\n|<details><summary>✅ asArray<sup id="t10"><a href="#t10">#</a></sup></summary><ul><li>✅ asArray when multiple elements, returns the same<sup id="t11"><a href="#t11">#</a></sup> (⌛ <time>)</li><li>✅ asArray when not a value, returns an empty array<sup id="t12"><a href="#t12">#</a></sup> (⌛ <time>)</li><li>✅ asArray when single element, returns it as an array<sup id="t13"><a href="#t13">#</a></sup> (⌛ <time>)</li></ul></details>|3|0|0|<time>\n|<details><summary>✅ main<sup id="t14"><a href="#t14">#</a></sup></summary><ul><li>✅ main delegates to parsers and reports results<sup id="t15"><a href="#t15">#</a></sup> (⌛ <time>)</li><li>✅ main if error and should fail, expect to fail<sup id="t16"><a href="#t16">#</a></sup> (⌛ <time>)</li><li>✅ main if warnings and should fail, expect to fail<sup id="t17"><a href="#t17">#</a></sup> (⌛ <time>)</li></ul></details>|3|0|0|<time>\n|<details><summary>✅ readFile<sup id="t18"><a href="#t18">#</a></sup></summary><ul><li>✅ readFile should return parsed XML file as JSON<sup id="t19"><a href="#t19">#</a></sup> (⌛ <time>)</li></ul></details>|1|0|0|<time>\n|<details><summary>✅ processFile<sup id="t20"><a href="#t20">#</a></sup></summary><ul><li>✅ processFile delegates to parsers and reports results<sup id="t21"><a href="#t21">#</a></sup> (⌛ <time>)</li></ul></details>|1|0|0|<time>\n|<details><summary>❌ junitParser<sup id="t22"><a href="#t22">#</a></sup></summary><ul><li>❌ junitParser given a jest junit xml should obtain annotations<sup id="t23"><a href="#t23">#</a></sup> (⌛ <time>)</li><li>✅ junitParser given another junit xml should obtain annotations<sup id="t24"><a href="#t24">#</a></sup> (⌛ <time>)</li><li>✅ junitParser given junit xml should obtain annotations<sup id="t25"><a href="#t25">#</a></sup> (⌛ <time>)</li></ul></details>|2|0|1|<time>\n|<details><summary>✅ androidLintParser<sup id="t26"><a href="#t26">#</a></sup></summary><ul><li>✅ androidLintParser given lint xml should obtain annotations<sup id="t27"><a href="#t27">#</a></sup> (⌛ <time>)</li></ul></details>|1|0|0|<time>\n|<details><summary>✅ checkstyleParser<sup id="t28"><a href="#t28">#</a></sup></summary><ul><li>✅ checkstyleParser given detekt xml should obtain annotations<sup id="t29"><a href="#t29">#</a></sup> (⌛ <time>)</li></ul></details>|1|0|0|<time>\n|<details><summary>✅ resolveFile<sup id="t30"><a href="#t30">#</a></sup></summary><ul><li>✅ resolveFile when file exists, just returns itself<sup id="t31"><a href="#t31">#</a></sup> (⌛ <time>)</li><li>✅ resolveFile when is absolute path, just returns itself<sup id="t32"><a href="#t32">#</a></sup> (⌛ <time>)</li><li>✅ resolveFile when looking for a file but extension does not matches, it returns the same<sup id="t33"><a href="#t33">#</a></sup> (⌛ <time>)</li><li>✅ resolveFile when looking for a file with possible extensions, it returns a match<sup id="t34"><a href="#t34">#</a></sup> (⌛ <time>)</li><li>✅ resolveFile when looking for a file, it returns a match<sup id="t35"><a href="#t35">#</a></sup> (⌛ <time>)</li></ul></details>|5|0|0|<time>\n|<details><summary>✅ org.test.sample.AnotherTestSuite<sup id="t36"><a href="#t36">#</a></sup></summary><ul><li>✅ aTest[maxDuration=100]<sup id="t37"><a href="#t37">#</a></sup> (⌛ <time>)</li><li>✅ aTest[maxDuration=200]<sup id="t38"><a href="#t38">#</a></sup> (⌛ <time>)</li><li>✅ aTest[maxDuration=300]<sup id="t39"><a href="#t39">#</a></sup> (⌛ <time>)</li><li>✅ aTest[maxDuration=400]<sup id="t40"><a href="#t40">#</a></sup> (⌛ <time>)</li></ul></details>|4|0|0|<time>\n|<details><summary>❌ org.test.sample.FlakyFailingTestSuite<sup id="t41"><a href="#t41">#</a></sup></summary><ul><li>❌ failingTest()<sup id="t42"><a href="#t42">#</a></sup> (⌛ <time>)</li><li>❌ failingTest()<sup id="t43"><a href="#t43">#</a></sup> (⌛ <time>)</li><li>❌ failingTest()<sup id="t44"><a href="#t44">#</a></sup> (⌛ <time>)</li><li>❌ failingTest()<sup id="t45"><a href="#t45">#</a></sup> (⌛ <time>)</li><li>❌ failingTest()<sup id="t46"><a href="#t46">#</a></sup> (⌛ <time>)</li></ul></details>|0|0|5|<time>\n|<details><summary>❌ org.test.sample.FlakyTestSuite<sup id="t47"><a href="#t47">#</a></sup></summary><ul><li>❌ flakyTest()<sup id="t48"><a href="#t48">#</a></sup> (⌛ <time>)</li><li>❌ flakyTest()<sup id="t49"><a href="#t49">#</a></sup> (⌛ <time>)</li><li>✅ flakyTest()<sup id="t50"><a href="#t50">#</a></sup> (⌛ <time>)</li></ul></details>|1|0|2|<time>\n|<details><summary>❌ org.test.sample.SampleTestSuite<sup id="t51"><a href="#t51">#</a></sup></summary><ul><li>🟡 a test skipped()<sup id="t52"><a href="#t52">#</a></sup> (⌛ <time>)</li><li>❌ a test that fails()<sup id="t53"><a href="#t53">#</a></sup> (⌛ <time>)</li><li>✅ a test that passes()<sup id="t54"><a href="#t54">#</a></sup> (⌛ <time>)</li><li>❌ a test that throws an exception()<sup id="t55"><a href="#t55">#</a></sup> (⌛ <time>)</li></ul></details>|1|1|2|<time>\n|<details><summary>✅ Tests.Registration<sup id="t56"><a href="#t56">#</a></sup></summary><ul><li>✅ testCase1<sup id="t57"><a href="#t57">#</a></sup> (⌛ <time>)</li><li>✅ testCase2<sup id="t58"><a href="#t58">#</a></sup> (⌛ <time>)</li><li>✅ testCase3<sup id="t59"><a href="#t59">#</a></sup> (⌛ <time>)</li></ul></details>|3|0|0|<time>\n|<details><summary>❌ Tests.Authentication<sup id="t60"><a href="#t60">#</a></sup></summary><ul><li>✅ testCase7<sup id="t61"><a href="#t61">#</a></sup> (⌛ <time>)</li><li>✅ testCase8<sup id="t62"><a href="#t62">#</a></sup> (⌛ <time>)</li><li>❌ testCase9<sup id="t63"><a href="#t63">#</a></sup> (⌛ <time>)</li></ul></details>|2|0|1|<time>\n|<details><summary>✅ Tests.Authentication.Login<sup id="t64"><a href="#t64">#</a></sup></summary><ul><li>✅ testCase4<sup id="t65"><a href="#t65">#</a></sup> (⌛ <time>)</li><li>✅ testCase5<sup id="t66"><a href="#t66">#</a></sup> (⌛ <time>)</li><li>✅ testCase6<sup id="t67"><a href="#t67">#</a></sup> (⌛ <time>)</li></ul></details>|3|0|0|<time>\n|<details><summary>✅ TrackingUIGoogleMapTests<sup id="t68"><a href="#t68">#</a></sup></summary><ul><li>✅ exampleUsage()<sup id="t69"><a href="#t69">#</a></sup></li></ul></details>|1|0|0|\n|<details><summary>✅ TrackingUITests<sup id="t70"><a href="#t70">#</a></sup></summary><ul><li>✅ example()<sup id="t71"><a href="#t71">#</a></sup></li></ul></details>|1|0|0|\n|<details><summary>❌❗SampleTests<sup id="t72"><a href="#t72">#</a></sup> [^flakyDisclaimer]</summary><ul><li>❌ testFailure()<sup id="t73"><a href="#t73">#</a></sup> (⌛ <time>,25s)</li><li>❎❗[^flakyDisclaimer]testFlaky()<sup id="t74"><a href="#t74">#</a></sup> (⌛ <time>,0012s)</li><li>🟡 testSkipped()<sup id="t75"><a href="#t75">#</a></sup> (⌛ <time>,006s)</li><li>✅ testSuccess()<sup id="t76"><a href="#t76">#</a></sup> (⌛ <time>,00041s)</li></ul></details>|2|1|1|\n|<details><summary>❌ SampleTests<sup id="t77"><a href="#t77">#</a></sup></summary><ul><li>❌ testFailure()<sup id="t78"><a href="#t78">#</a></sup> (⌛ <time>,36s)</li><li>❌ testFlaky()<sup id="t79"><a href="#t79">#</a></sup> (⌛ <time>,0012s)</li><li>🟡 testSkipped()<sup id="t80"><a href="#t80">#</a></sup> (⌛ <time>,005s)</li><li>✅ testSuccess()<sup id="t81"><a href="#t81">#</a></sup> (⌛ <time>,00072s)</li></ul></details>|1|1|2|\n[^flakyDisclaimer]: ❎❗flaky test (some executions have passed, others have failed)\n\n|Detekt<sup id="c1"><a href="#c1">#</a></sup>|🛑 0 errors|⚠️ 1 warning|💡 0 others|\n|:-|-|-|-|\n|NewLineAtEndOfFile<sup id="c2"><a href="#c2">#</a></sup>|0|1|0|\n\n|lint 8.4.0<sup id="c3"><a href="#c3">#</a></sup>|🛑 0 errors|⚠️ 4 warnings|💡 0 others|\n|:-|-|-|-|\n|Correctness / GradleDependency<sup id="c4"><a href="#c4">#</a></sup>|0|1|0|\n|Performance / VectorPath<sup id="c5"><a href="#c5">#</a></sup>|0|3|0|\n\n',
                title: "60 tests: ✅ 41 (❗2), 🟡 3, ❌ 16, checks: ⚠️ 5",
            },
            "Test Reports (GitHub App, many annotations)": {
                annotations: 143,
                conclusion: "failure",
                status: "completed",
                summary:
                    '|CheckStyle<sup id="c1"><a href="#c1">#</a></sup>|🛑 60 errors|⚠️ 83 warnings|💡 0 others|\n|:-|-|-|-|\n|checkstyle.DummyError<sup id="c2"><a href="#c2">#</a></sup>|60|0|0|\n|checkstyle.DummyWarning<sup id="c3"><a href="#c3">#</a></sup>|0|83|0|\n\n',
                title: "Checks: 🛑 60, ⚠️ 83",
            },
            "Test Reports (No Reports)": {
                annotations: 0,
                conclusion: "failure",
                status: "completed",
                summary: "",
                title: "❗No report files found",
            },
            "Test Reports (PR filtered)": {
                annotations: 1,
                conclusion: "failure",
                status: "completed",
                summary:
                    '|Test Suites|✅ 8 passed|🟡 0 skipped|❌ 1 failed|⌛ took\n|:-|-|-|-|-\n|<details><summary>✅ Tests.Registration<sup id="t1"><a href="#t1">#</a></sup></summary><ul><li>✅ testCase1<sup id="t2"><a href="#t2">#</a></sup> (⌛ <time>)</li><li>✅ testCase2<sup id="t3"><a href="#t3">#</a></sup> (⌛ <time>)</li><li>✅ testCase3<sup id="t4"><a href="#t4">#</a></sup> (⌛ <time>)</li></ul></details>|3|0|0|<time>\n|<details><summary>❌ Tests.Authentication<sup id="t5"><a href="#t5">#</a></sup></summary><ul><li>✅ testCase7<sup id="t6"><a href="#t6">#</a></sup> (⌛ <time>)</li><li>✅ testCase8<sup id="t7"><a href="#t7">#</a></sup> (⌛ <time>)</li><li>❌ testCase9<sup id="t8"><a href="#t8">#</a></sup> (⌛ <time>)</li></ul></details>|2|0|1|<time>\n|<details><summary>✅ Tests.Authentication.Login<sup id="t9"><a href="#t9">#</a></sup></summary><ul><li>✅ testCase4<sup id="t10"><a href="#t10">#</a></sup> (⌛ <time>)</li><li>✅ testCase5<sup id="t11"><a href="#t11">#</a></sup> (⌛ <time>)</li><li>✅ testCase6<sup id="t12"><a href="#t12">#</a></sup> (⌛ <time>)</li></ul></details>|3|0|0|<time>\n',
                title: "9 tests: ✅ 8, ❌ 1",
            },
            "Test Reports (computing flaky)": {
                annotations: 18,
                conclusion: "failure",
                status: "completed",
                summary:
                    '|Test Suites|✅ 41 passed|🟡 3 skipped|❌ 10 failed|⌛ took\n|:-|-|-|-|-\n|<details><summary>❌ org.test.Test<sup id="t1"><a href="#t1">#</a></sup></summary><ul><li>✅ andAfterReset<sup id="t2"><a href="#t2">#</a></sup> (⌛ <time>)</li><li>✅ isDeterministic<sup id="t3"><a href="#t3">#</a></sup> (⌛ <time>)</li><li>❌ testScene[CLEAR at 2024-08-01T00:00+02:00[Europe/Madrid]]<sup id="t4"><a href="#t4">#</a></sup> (⌛ <time>)</li></ul></details>|2|0|1|<time>\n|<details><summary>❌❗<sup id="t5"><a href="#t5">#</a></sup> [^flakyDisclaimer]</summary><ul><li>❌ flakyTest<sup id="t6"><a href="#t6">#</a></sup> (⌛ <time>)</li><li>❎❗[^flakyDisclaimer]i_can_see_map_screen_for_delivering_orders<sup id="t7"><a href="#t7">#</a></sup> (⌛ <time>)</li><li>✅ userCanApplyGroupFilters<sup id="t8"><a href="#t8">#</a></sup> (⌛ <time>)</li><li>✅ userCanOpenAndApplyFilters<sup id="t9"><a href="#t9">#</a></sup> (⌛ <time>)</li></ul></details>|3|0|1|<time>\n|<details><summary>✅ asArray<sup id="t10"><a href="#t10">#</a></sup></summary><ul><li>✅ asArray when multiple elements, returns the same<sup id="t11"><a href="#t11">#</a></sup> (⌛ <time>)</li><li>✅ asArray when not a value, returns an empty array<sup id="t12"><a href="#t12">#</a></sup> (⌛ <time>)</li><li>✅ asArray when single element, returns it as an array<sup id="t13"><a href="#t13">#</a></sup> (⌛ <time>)</li></ul></details>|3|0|0|<time>\n|<details><summary>✅ main<sup id="t14"><a href="#t14">#</a></sup></summary><ul><li>✅ main delegates to parsers and reports results<sup id="t15"><a href="#t15">#</a></sup> (⌛ <time>)</li><li>✅ main if error and should fail, expect to fail<sup id="t16"><a href="#t16">#</a></sup> (⌛ <time>)</li><li>✅ main if warnings and should fail, expect to fail<sup id="t17"><a href="#t17">#</a></sup> (⌛ <time>)</li></ul></details>|3|0|0|<time>\n|<details><summary>✅ readFile<sup id="t18"><a href="#t18">#</a></sup></summary><ul><li>✅ readFile should return parsed XML file as JSON<sup id="t19"><a href="#t19">#</a></sup> (⌛ <time>)</li></ul></details>|1|0|0|<time>\n|<details><summary>✅ processFile<sup id="t20"><a href="#t20">#</a></sup></summary><ul><li>✅ processFile delegates to parsers and reports results<sup id="t21"><a href="#t21">#</a></sup> (⌛ <time>)</li></ul></details>|1|0|0|<time>\n|<details><summary>❌ junitParser<sup id="t22"><a href="#t22">#</a></sup></summary><ul><li>❌ junitParser given a jest junit xml should obtain annotations<sup id="t23"><a href="#t23">#</a></sup> (⌛ <time>)</li><li>✅ junitParser given another junit xml should obtain annotations<sup id="t24"><a href="#t24">#</a></sup> (⌛ <time>)</li><li>✅ junitParser given junit xml should obtain annotations<sup id="t25"><a href="#t25">#</a></sup> (⌛ <time>)</li></ul></details>|2|0|1|<time>\n|<details><summary>✅ androidLintParser<sup id="t26"><a href="#t26">#</a></sup></summary><ul><li>✅ androidLintParser given lint xml should obtain annotations<sup id="t27"><a href="#t27">#</a></sup> (⌛ <time>)</li></ul></details>|1|0|0|<time>\n|<details><summary>✅ checkstyleParser<sup id="t28"><a href="#t28">#</a></sup></summary><ul><li>✅ checkstyleParser given detekt xml should obtain annotations<sup id="t29"><a href="#t29">#</a></sup> (⌛ <time>)</li></ul></details>|1|0|0|<time>\n|<details><summary>✅ resolveFile<sup id="t30"><a href="#t30">#</a></sup></summary><ul><li>✅ resolveFile when file exists, just returns itself<sup id="t31"><a href="#t31">#</a></sup> (⌛ <time>)</li><li>✅ resolveFile when is absolute path, just returns itself<sup id="t32"><a href="#t32">#</a></sup> (⌛ <time>)</li><li>✅ resolveFile when looking for a file but extension does not matches, it returns the same<sup id="t33"><a href="#t33">#</a></sup> (⌛ <time>)</li><li>✅ resolveFile when looking for a file with possible extensions, it returns a match<sup id="t34"><a href="#t34">#</a></sup> (⌛ <time>)</li><li>✅ resolveFile when looking for a file, it returns a match<sup id="t35"><a href="#t35">#</a></sup> (⌛ <time>)</li></ul></details>|5|0|0|<time>\n|<details><summary>✅ org.test.sample.AnotherTestSuite<sup id="t36"><a href="#t36">#</a></sup></summary><ul><li>✅ aTest[maxDuration=100]<sup id="t37"><a href="#t37">#</a></sup> (⌛ <time>)</li><li>✅ aTest[maxDuration=200]<sup id="t38"><a href="#t38">#</a></sup> (⌛ <time>)</li><li>✅ aTest[maxDuration=300]<sup id="t39"><a href="#t39">#</a></sup> (⌛ <time>)</li><li>✅ aTest[maxDuration=400]<sup id="t40"><a href="#t40">#</a></sup> (⌛ <time>)</li></ul></details>|4|0|0|<time>\n|<details><summary>❌ org.test.sample.FlakyFailingTestSuite<sup id="t41"><a href="#t41">#</a></sup></summary><ul><li>❌ failingTest()<sup id="t42"><a href="#t42">#</a></sup> (⌛ <time>)</li></ul></details>|0|0|1|<time>\n|<details><summary>❎❗org.test.sample.FlakyTestSuite<sup id="t43"><a href="#t43">#</a></sup> [^flakyDisclaimer]</summary><ul><li>❎❗[^flakyDisclaimer]flakyTest()<sup id="t44"><a href="#t44">#</a></sup> (⌛ <time>)</li></ul></details>|1|0|0|<time>\n|<details><summary>❌ org.test.sample.SampleTestSuite<sup id="t45"><a href="#t45">#</a></sup></summary><ul><li>🟡 a test skipped()<sup id="t46"><a href="#t46">#</a></sup> (⌛ <time>)</li><li>❌ a test that fails()<sup id="t47"><a href="#t47">#</a></sup> (⌛ <time>)</li><li>✅ a test that passes()<sup id="t48"><a href="#t48">#</a></sup> (⌛ <time>)</li><li>❌ a test that throws an exception()<sup id="t49"><a href="#t49">#</a></sup> (⌛ <time>)</li></ul></details>|1|1|2|<time>\n|<details><summary>✅ Tests.Registration<sup id="t50"><a href="#t50">#</a></sup></summary><ul><li>✅ testCase1<sup id="t51"><a href="#t51">#</a></sup> (⌛ <time>)</li><li>✅ testCase2<sup id="t52"><a href="#t52">#</a></sup> (⌛ <time>)</li><li>✅ testCase3<sup id="t53"><a href="#t53">#</a></sup> (⌛ <time>)</li></ul></details>|3|0|0|<time>\n|<details><summary>❌ Tests.Authentication<sup id="t54"><a href="#t54">#</a></sup></summary><ul><li>✅ testCase7<sup id="t55"><a href="#t55">#</a></sup> (⌛ <time>)</li><li>✅ testCase8<sup id="t56"><a href="#t56">#</a></sup> (⌛ <time>)</li><li>❌ testCase9<sup id="t57"><a href="#t57">#</a></sup> (⌛ <time>)</li></ul></details>|2|0|1|<time>\n|<details><summary>✅ Tests.Authentication.Login<sup id="t58"><a href="#t58">#</a></sup></summary><ul><li>✅ testCase4<sup id="t59"><a href="#t59">#</a></sup> (⌛ <time>)</li><li>✅ testCase5<sup id="t60"><a href="#t60">#</a></sup> (⌛ <time>)</li><li>✅ testCase6<sup id="t61"><a href="#t61">#</a></sup> (⌛ <time>)</li></ul></details>|3|0|0|<time>\n|<details><summary>✅ TrackingUIGoogleMapTests<sup id="t62"><a href="#t62">#</a></sup></summary><ul><li>✅ exampleUsage()<sup id="t63"><a href="#t63">#</a></sup></li></ul></details>|1|0|0|\n|<details><summary>✅ TrackingUITests<sup id="t64"><a href="#t64">#</a></sup></summary><ul><li>✅ example()<sup id="t65"><a href="#t65">#</a></sup></li></ul></details>|1|0|0|\n|<details><summary>❌❗SampleTests<sup id="t66"><a href="#t66">#</a></sup> [^flakyDisclaimer]</summary><ul><li>❌ testFailure()<sup id="t67"><a href="#t67">#</a></sup> (⌛ <time>,25s)</li><li>❎❗[^flakyDisclaimer]testFlaky()<sup id="t68"><a href="#t68">#</a></sup> (⌛ <time>,0012s)</li><li>🟡 testSkipped()<sup id="t69"><a href="#t69">#</a></sup> (⌛ <time>,006s)</li><li>✅ testSuccess()<sup id="t70"><a href="#t70">#</a></sup> (⌛ <time>,00041s)</li></ul></details>|2|1|1|\n|<details><summary>❌ SampleTests<sup id="t71"><a href="#t71">#</a></sup></summary><ul><li>❌ testFailure()<sup id="t72"><a href="#t72">#</a></sup> (⌛ <time>,36s)</li><li>❌ testFlaky()<sup id="t73"><a href="#t73">#</a></sup> (⌛ <time>,0012s)</li><li>🟡 testSkipped()<sup id="t74"><a href="#t74">#</a></sup> (⌛ <time>,005s)</li><li>✅ testSuccess()<sup id="t75"><a href="#t75">#</a></sup> (⌛ <time>,00072s)</li></ul></details>|1|1|2|\n[^flakyDisclaimer]: ❎❗flaky test (some executions have passed, others have failed)\n\n|Detekt<sup id="c1"><a href="#c1">#</a></sup>|🛑 0 errors|⚠️ 1 warning|💡 0 others|\n|:-|-|-|-|\n|NewLineAtEndOfFile<sup id="c2"><a href="#c2">#</a></sup>|0|1|0|\n\n|lint 8.4.0<sup id="c3"><a href="#c3">#</a></sup>|🛑 0 errors|⚠️ 4 warnings|💡 0 others|\n|:-|-|-|-|\n|Correctness / GradleDependency<sup id="c4"><a href="#c4">#</a></sup>|0|1|0|\n|Performance / VectorPath<sup id="c5"><a href="#c5">#</a></sup>|0|3|0|\n\n',
                title: "54 tests: ✅ 41 (❗3), 🟡 3, ❌ 10, checks: ⚠️ 5",
            },
            "Test Reports (full)": {
                annotations: 23,
                conclusion: "failure",
                status: "completed",
                summary:
                    '|Test Suites|✅ 41 passed|🟡 3 skipped|❌ 16 failed|⌛ took\n|:-|-|-|-|-\n|<details><summary>❌ org.test.Test<sup id="t1"><a href="#t1">#</a></sup></summary><ul><li>✅ andAfterReset<sup id="t2"><a href="#t2">#</a></sup> (⌛ <time>)</li><li>✅ isDeterministic<sup id="t3"><a href="#t3">#</a></sup> (⌛ <time>)</li><li>❌ testScene[CLEAR at 2024-08-01T00:00+02:00[Europe/Madrid]]<sup id="t4"><a href="#t4">#</a></sup> (⌛ <time>)</li></ul></details>|2|0|1|<time>\n|<details><summary>❌❗<sup id="t5"><a href="#t5">#</a></sup> [^flakyDisclaimer]</summary><ul><li>❌ flakyTest<sup id="t6"><a href="#t6">#</a></sup> (⌛ <time>)</li><li>❎❗[^flakyDisclaimer]i_can_see_map_screen_for_delivering_orders<sup id="t7"><a href="#t7">#</a></sup> (⌛ <time>)</li><li>✅ userCanApplyGroupFilters<sup id="t8"><a href="#t8">#</a></sup> (⌛ <time>)</li><li>✅ userCanOpenAndApplyFilters<sup id="t9"><a href="#t9">#</a></sup> (⌛ <time>)</li></ul></details>|3|0|1|<time>\n|<details><summary>✅ asArray<sup id="t10"><a href="#t10">#</a></sup></summary><ul><li>✅ asArray when multiple elements, returns the same<sup id="t11"><a href="#t11">#</a></sup> (⌛ <time>)</li><li>✅ asArray when not a value, returns an empty array<sup id="t12"><a href="#t12">#</a></sup> (⌛ <time>)</li><li>✅ asArray when single element, returns it as an array<sup id="t13"><a href="#t13">#</a></sup> (⌛ <time>)</li></ul></details>|3|0|0|<time>\n|<details><summary>✅ main<sup id="t14"><a href="#t14">#</a></sup></summary><ul><li>✅ main delegates to parsers and reports results<sup id="t15"><a href="#t15">#</a></sup> (⌛ <time>)</li><li>✅ main if error and should fail, expect to fail<sup id="t16"><a href="#t16">#</a></sup> (⌛ <time>)</li><li>✅ main if warnings and should fail, expect to fail<sup id="t17"><a href="#t17">#</a></sup> (⌛ <time>)</li></ul></details>|3|0|0|<time>\n|<details><summary>✅ readFile<sup id="t18"><a href="#t18">#</a></sup></summary><ul><li>✅ readFile should return parsed XML file as JSON<sup id="t19"><a href="#t19">#</a></sup> (⌛ <time>)</li></ul></details>|1|0|0|<time>\n|<details><summary>✅ processFile<sup id="t20"><a href="#t20">#</a></sup></summary><ul><li>✅ processFile delegates to parsers and reports results<sup id="t21"><a href="#t21">#</a></sup> (⌛ <time>)</li></ul></details>|1|0|0|<time>\n|<details><summary>❌ junitParser<sup id="t22"><a href="#t22">#</a></sup></summary><ul><li>❌ junitParser given a jest junit xml should obtain annotations<sup id="t23"><a href="#t23">#</a></sup> (⌛ <time>)</li><li>✅ junitParser given another junit xml should obtain annotations<sup id="t24"><a href="#t24">#</a></sup> (⌛ <time>)</li><li>✅ junitParser given junit xml should obtain annotations<sup id="t25"><a href="#t25">#</a></sup> (⌛ <time>)</li></ul></details>|2|0|1|<time>\n|<details><summary>✅ androidLintParser<sup id="t26"><a href="#t26">#</a></sup></summary><ul><li>✅ androidLintParser given lint xml should obtain annotations<sup id="t27"><a href="#t27">#</a></sup> (⌛ <time>)</li></ul></details>|1|0|0|<time>\n|<details><summary>✅ checkstyleParser<sup id="t28"><a href="#t28">#</a></sup></summary><ul><li>✅ checkstyleParser given detekt xml should obtain annotations<sup id="t29"><a href="#t29">#</a></sup> (⌛ <time>)</li></ul></details>|1|0|0|<time>\n|<details><summary>✅ resolveFile<sup id="t30"><a href="#t30">#</a></sup></summary><ul><li>✅ resolveFile when file exists, just returns itself<sup id="t31"><a href="#t31">#</a></sup> (⌛ <time>)</li><li>✅ resolveFile when is absolute path, just returns itself<sup id="t32"><a href="#t32">#</a></sup> (⌛ <time>)</li><li>✅ resolveFile when looking for a file but extension does not matches, it returns the same<sup id="t33"><a href="#t33">#</a></sup> (⌛ <time>)</li><li>✅ resolveFile when looking for a file with possible extensions, it returns a match<sup id="t34"><a href="#t34">#</a></sup> (⌛ <time>)</li><li>✅ resolveFile when looking for a file, it returns a match<sup id="t35"><a href="#t35">#</a></sup> (⌛ <time>)</li></ul></details>|5|0|0|<time>\n|<details><summary>✅ org.test.sample.AnotherTestSuite<sup id="t36"><a href="#t36">#</a></sup></summary><ul><li>✅ aTest[maxDuration=100]<sup id="t37"><a href="#t37">#</a></sup> (⌛ <time>)</li><li>✅ aTest[maxDuration=200]<sup id="t38"><a href="#t38">#</a></sup> (⌛ <time>)</li><li>✅ aTest[maxDuration=300]<sup id="t39"><a href="#t39">#</a></sup> (⌛ <time>)</li><li>✅ aTest[maxDuration=400]<sup id="t40"><a href="#t40">#</a></sup> (⌛ <time>)</li></ul></details>|4|0|0|<time>\n|<details><summary>❌ org.test.sample.FlakyFailingTestSuite<sup id="t41"><a href="#t41">#</a></sup></summary><ul><li>❌ failingTest()<sup id="t42"><a href="#t42">#</a></sup> (⌛ <time>)</li><li>❌ failingTest()<sup id="t43"><a href="#t43">#</a></sup> (⌛ <time>)</li><li>❌ failingTest()<sup id="t44"><a href="#t44">#</a></sup> (⌛ <time>)</li><li>❌ failingTest()<sup id="t45"><a href="#t45">#</a></sup> (⌛ <time>)</li><li>❌ failingTest()<sup id="t46"><a href="#t46">#</a></sup> (⌛ <time>)</li></ul></details>|0|0|5|<time>\n|<details><summary>❌ org.test.sample.FlakyTestSuite<sup id="t47"><a href="#t47">#</a></sup></summary><ul><li>❌ flakyTest()<sup id="t48"><a href="#t48">#</a></sup> (⌛ <time>)</li><li>❌ flakyTest()<sup id="t49"><a href="#t49">#</a></sup> (⌛ <time>)</li><li>✅ flakyTest()<sup id="t50"><a href="#t50">#</a></sup> (⌛ <time>)</li></ul></details>|1|0|2|<time>\n|<details><summary>❌ org.test.sample.SampleTestSuite<sup id="t51"><a href="#t51">#</a></sup></summary><ul><li>🟡 a test skipped()<sup id="t52"><a href="#t52">#</a></sup> (⌛ <time>)</li><li>❌ a test that fails()<sup id="t53"><a href="#t53">#</a></sup> (⌛ <time>)</li><li>✅ a test that passes()<sup id="t54"><a href="#t54">#</a></sup> (⌛ <time>)</li><li>❌ a test that throws an exception()<sup id="t55"><a href="#t55">#</a></sup> (⌛ <time>)</li></ul></details>|1|1|2|<time>\n|<details><summary>✅ Tests.Registration<sup id="t56"><a href="#t56">#</a></sup></summary><ul><li>✅ testCase1<sup id="t57"><a href="#t57">#</a></sup> (⌛ <time>)</li><li>✅ testCase2<sup id="t58"><a href="#t58">#</a></sup> (⌛ <time>)</li><li>✅ testCase3<sup id="t59"><a href="#t59">#</a></sup> (⌛ <time>)</li></ul></details>|3|0|0|<time>\n|<details><summary>❌ Tests.Authentication<sup id="t60"><a href="#t60">#</a></sup></summary><ul><li>✅ testCase7<sup id="t61"><a href="#t61">#</a></sup> (⌛ <time>)</li><li>✅ testCase8<sup id="t62"><a href="#t62">#</a></sup> (⌛ <time>)</li><li>❌ testCase9<sup id="t63"><a href="#t63">#</a></sup> (⌛ <time>)</li></ul></details>|2|0|1|<time>\n|<details><summary>✅ Tests.Authentication.Login<sup id="t64"><a href="#t64">#</a></sup></summary><ul><li>✅ testCase4<sup id="t65"><a href="#t65">#</a></sup> (⌛ <time>)</li><li>✅ testCase5<sup id="t66"><a href="#t66">#</a></sup> (⌛ <time>)</li><li>✅ testCase6<sup id="t67"><a href="#t67">#</a></sup> (⌛ <time>)</li></ul></details>|3|0|0|<time>\n|<details><summary>✅ TrackingUIGoogleMapTests<sup id="t68"><a href="#t68">#</a></sup></summary><ul><li>✅ exampleUsage()<sup id="t69"><a href="#t69">#</a></sup></li></ul></details>|1|0|0|\n|<details><summary>✅ TrackingUITests<sup id="t70"><a href="#t70">#</a></sup></summary><ul><li>✅ example()<sup id="t71"><a href="#t71">#</a></sup></li></ul></details>|1|0|0|\n|<details><summary>❌❗SampleTests<sup id="t72"><a href="#t72">#</a></sup> [^flakyDisclaimer]</summary><ul><li>❌ testFailure()<sup id="t73"><a href="#t73">#</a></sup> (⌛ <time>,25s)</li><li>❎❗[^flakyDisclaimer]testFlaky()<sup id="t74"><a href="#t74">#</a></sup> (⌛ <time>,0012s)</li><li>🟡 testSkipped()<sup id="t75"><a href="#t75">#</a></sup> (⌛ <time>,006s)</li><li>✅ testSuccess()<sup id="t76"><a href="#t76">#</a></sup> (⌛ <time>,00041s)</li></ul></details>|2|1|1|\n|<details><summary>❌ SampleTests<sup id="t77"><a href="#t77">#</a></sup></summary><ul><li>❌ testFailure()<sup id="t78"><a href="#t78">#</a></sup> (⌛ <time>,36s)</li><li>❌ testFlaky()<sup id="t79"><a href="#t79">#</a></sup> (⌛ <time>,0012s)</li><li>🟡 testSkipped()<sup id="t80"><a href="#t80">#</a></sup> (⌛ <time>,005s)</li><li>✅ testSuccess()<sup id="t81"><a href="#t81">#</a></sup> (⌛ <time>,00072s)</li></ul></details>|1|1|2|\n[^flakyDisclaimer]: ❎❗flaky test (some executions have passed, others have failed)\n\n|Detekt<sup id="c1"><a href="#c1">#</a></sup>|🛑 0 errors|⚠️ 1 warning|💡 0 others|\n|:-|-|-|-|\n|NewLineAtEndOfFile<sup id="c2"><a href="#c2">#</a></sup>|0|1|0|\n\n|lint 8.4.0<sup id="c3"><a href="#c3">#</a></sup>|🛑 0 errors|⚠️ 4 warnings|💡 0 others|\n|:-|-|-|-|\n|Correctness / GradleDependency<sup id="c4"><a href="#c4">#</a></sup>|0|1|0|\n|Performance / VectorPath<sup id="c5"><a href="#c5">#</a></sup>|0|3|0|\n\n',
                title: "60 tests: ✅ 41 (❗2), 🟡 3, ❌ 16, checks: ⚠️ 5",
            },
            "Test Reports (omitting passed)": {
                annotations: 23,
                conclusion: "failure",
                status: "completed",
                summary:
                    '|Test Suites|✅ 41 passed[^passedSkipDisclaimer]|🟡 3 skipped|❌ 16 failed|⌛ took\n|:-|-|-|-|-\n|<details><summary>❌ org.test.Test<sup id="t1"><a href="#t1">#</a></sup></summary><ul><li>❌ testScene[CLEAR at 2024-08-01T00:00+02:00[Europe/Madrid]]<sup id="t2"><a href="#t2">#</a></sup> (⌛ <time>)</li></ul></details>|2|0|1|<time>\n|<details><summary>❌❗<sup id="t3"><a href="#t3">#</a></sup> [^flakyDisclaimer]</summary><ul><li>❌ flakyTest<sup id="t4"><a href="#t4">#</a></sup> (⌛ <time>)</li><li>❎❗[^flakyDisclaimer]i_can_see_map_screen_for_delivering_orders<sup id="t5"><a href="#t5">#</a></sup> (⌛ <time>)</li></ul></details>|3|0|1|<time>\n|<details><summary>❌ junitParser<sup id="t6"><a href="#t6">#</a></sup></summary><ul><li>❌ junitParser given a jest junit xml should obtain annotations<sup id="t7"><a href="#t7">#</a></sup> (⌛ <time>)</li></ul></details>|2|0|1|<time>\n|<details><summary>❌ org.test.sample.FlakyFailingTestSuite<sup id="t8"><a href="#t8">#</a></sup></summary><ul><li>❌ failingTest()<sup id="t9"><a href="#t9">#</a></sup> (⌛ <time>)</li><li>❌ failingTest()<sup id="t10"><a href="#t10">#</a></sup> (⌛ <time>)</li><li>❌ failingTest()<sup id="t11"><a href="#t11">#</a></sup> (⌛ <time>)</li><li>❌ failingTest()<sup id="t12"><a href="#t12">#</a></sup> (⌛ <time>)</li><li>❌ failingTest()<sup id="t13"><a href="#t13">#</a></sup> (⌛ <time>)</li></ul></details>|0|0|5|<time>\n|<details><summary>❌ org.test.sample.FlakyTestSuite<sup id="t14"><a href="#t14">#</a></sup></summary><ul><li>❌ flakyTest()<sup id="t15"><a href="#t15">#</a></sup> (⌛ <time>)</li><li>❌ flakyTest()<sup id="t16"><a href="#t16">#</a></sup> (⌛ <time>)</li></ul></details>|1|0|2|<time>\n|<details><summary>❌ org.test.sample.SampleTestSuite<sup id="t17"><a href="#t17">#</a></sup></summary><ul><li>🟡 a test skipped()<sup id="t18"><a href="#t18">#</a></sup> (⌛ <time>)</li><li>❌ a test that fails()<sup id="t19"><a href="#t19">#</a></sup> (⌛ <time>)</li><li>❌ a test that throws an exception()<sup id="t20"><a href="#t20">#</a></sup> (⌛ <time>)</li></ul></details>|1|1|2|<time>\n|<details><summary>❌ Tests.Authentication<sup id="t21"><a href="#t21">#</a></sup></summary><ul><li>❌ testCase9<sup id="t22"><a href="#t22">#</a></sup> (⌛ <time>)</li></ul></details>|2|0|1|<time>\n|<details><summary>❌❗SampleTests<sup id="t23"><a href="#t23">#</a></sup> [^flakyDisclaimer]</summary><ul><li>❌ testFailure()<sup id="t24"><a href="#t24">#</a></sup> (⌛ <time>,25s)</li><li>❎❗[^flakyDisclaimer]testFlaky()<sup id="t25"><a href="#t25">#</a></sup> (⌛ <time>,0012s)</li><li>🟡 testSkipped()<sup id="t26"><a href="#t26">#</a></sup> (⌛ <time>,006s)</li></ul></details>|2|1|1|\n|<details><summary>❌ SampleTests<sup id="t27"><a href="#t27">#</a></sup></summary><ul><li>❌ testFailure()<sup id="t28"><a href="#t28">#</a></sup> (⌛ <time>,36s)</li><li>❌ testFlaky()<sup id="t29"><a href="#t29">#</a></sup> (⌛ <time>,0012s)</li><li>🟡 testSkipped()<sup id="t30"><a href="#t30">#</a></sup> (⌛ <time>,005s)</li></ul></details>|1|1|2|\n[^passedSkipDisclaimer]: ✅ passed suites were not reported\n[^flakyDisclaimer]: ❎❗flaky test (some executions have passed, others have failed)\n\n|Detekt<sup id="c1"><a href="#c1">#</a></sup>|🛑 0 errors|⚠️ 1 warning|💡 0 others|\n|:-|-|-|-|\n|NewLineAtEndOfFile<sup id="c2"><a href="#c2">#</a></sup>|0|1|0|\n\n|lint 8.4.0<sup id="c3"><a href="#c3">#</a></sup>|🛑 0 errors|⚠️ 4 warnings|💡 0 others|\n|:-|-|-|-|\n|Correctness / GradleDependency<sup id="c4"><a href="#c4">#</a></sup>|0|1|0|\n|Performance / VectorPath<sup id="c5"><a href="#c5">#</a></sup>|0|3|0|\n\n',
                title: "60 tests: ✅ 41 (❗2), 🟡 3, ❌ 16, checks: ⚠️ 5",
            },
        });
    });
});
